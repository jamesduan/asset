#!/bin/bash
set -e
alias ssh='ssh -o StrictHostKeyChecking=no -o BatchMode=yes -o UserKnownHostsFile=/dev/null'
function gethelp(){
echo "General usage: 
==============
usage: inittomcat [-h] [-t maxThread] [-m xmsPercent] -d appdirectory -i iplist

Yihaodian System administration Init Tomcat Tool

optional arguments:
  -h                    : list available command line options (this page)
  -t maxThread          : max thread config of tomcat in server.xml ,default: 200
  -m xmsPercent         : percent of system memory to set sms,smx of tomcat in catalina.sh ,default: 50
  -d appdirectory       : work directory of application
  -i iplist             : ip list to init ,separated by commas ,example: 10.1.1.1,10.1.1.2,10.1.1.3
"
}
function writelog(){
    echo `date "+%Y-%m-%d %H:%M:%S"` : $* >> logs/`date +%Y-%m-%d`.log
}

#main
maxThread=200
xmsPercent=50
appdirectory=
iplist=
while [ $# -gt 0 ]
do
    if [ $1 = -h ]
    then
        gethelp
        exit 0
    elif [ $1 = -d ]
    then
        appdirectory=$2
        shift;shift
    elif [ $1 = -t ]
    then
        maxThread=$2
        shift;shift
    elif [ $1 = -m ]
    then
        xmsPercent=$2
        shift;shift
    elif [ $1 = -i ]
    then
        iplist=`echo $2|sed 's/,/ /g'`
        shift;shift
    else
        echo "no valid command found!!!"
        gethelp
        exit 1
    fi
done
#判断参数是否正确
checkArgs=FALSE
echo $xmsPercent|grep -P "^\d*$" > /dev/null && echo $maxThread|grep -P "^\d*$" > /dev/null && [ ! -z $appdirectory ] > /dev/null && [ ! -z "$iplist" ] && checkArgs=TRUE
if [ $checkArgs = FALSE ]
then
    echo "some args is wrong, please check"
    echo "xmsPercent   : $xmsPercent"
    echo "maxThread    : $maxThread"
    echo "appdirectory : $appdirectory"
    echo "iplist       : $iplist"
    gethelp
    exit 1
fi

regex_ip="^(2[0-4][0-9]|25[0-5]|1[0-9][0-9]|[1-9]?[0-9])(\.(2[0-4][0-9]|25[0-5]|1[0-9][0-9]|[1-9]?[0-9])){3}$"
for eachip in $iplist
do
    echo $eachip|grep -P "$regex_ip" > /dev/null || checkArgs=FALSE
    if [ $checkArgs = FALSE ]
    then
        echo "$eachip is a wrong ip"
        exit 1
    fi
done

#执行部署
writelog initing tomcat ... xmsPercent: $xmsPercent ,maxThread: $maxThread ,appdirectory: $appdirectory, iplist: $iplist
for eachip in $iplist
do
    printf "initing $eachip ... "
    mem=`ssh $eachip "free -m|grep "^Mem:"|awk '{print \\$2}'"`
    xmsnum=$(($mem*$xmsPercent/100))
    #maxSpareThreads 为 maxThreads 的2分之1，且不超过200
    #minSpareThreads 为 maxThreads 的4分之1，且不超过100
    maxSpareThreads=$(($maxThread/2))
    minSpareThreads=$(($maxThread/4))
    [ $maxSpareThreads -gt 200 ] && maxSpareThreads=200
    [ $minSpareThreads -gt 100 ] && minSpareThreads=100
    #判断tomcat目录是否存在
    if [ x`ssh $eachip "[ -d /usr/local/tomcat6 ] && echo exists"` != "xexists" ]
    then
        echo $eachip have not tomcat directory
        exit 1
    elif [ x`ssh $eachip "[ -d /var/www/webapps/ ] && echo exists"` != "xexists" ]
    then
        echo $eachip have not webapps directory
        exit 1
    fi
    #初始化工作目录，加个x是为了防止$eachip由于各种原因没有获取到值，删除了./workdir//，会将./workdir删除
    workdir=./workdir/${eachip}x/
#    if [ -d $workdir ]
#    then
#        echo "$eachip worddir is exist ,means it's initing ... go to next server"
#        continue
#    fi
    mkdir -p $workdir
#    cp -a ./template/* $workdir
    rsync -a --delete ./template/ $workdir
    #change config
    sed -i '/^JAVA_OPTS=/s/-Xms[^ ]*/-Xms'${xmsnum}'m/g' $workdir/catalina.sh
    sed -i '/^JAVA_OPTS=/s/-Xmx[^ ]*/-Xmx'${xmsnum}'m/g' $workdir/catalina.sh
    sed -i 's/maxThreads="[0-9]*"/maxThreads="'$maxThread'"/g' $workdir/server.xml
    sed -i 's/maxSpareThreads="[0-9]*"/maxSpareThreads="'$maxSpareThreads'"/g' $workdir/server.xml
    sed -i 's/minSpareThreads="[0-9]*"/minSpareThreads="'$minSpareThreads'"/g' $workdir/server.xml
    sed -i 's%docBase="[^\"]*"%docBase="'$appdirectory'"%g' $workdir/server.xml
    #scp to remote server
    scp $workdir/catalina.sh $eachip:/usr/local/tomcat6/bin/ > /dev/null
    scp $workdir/server.xml $eachip:/usr/local/tomcat6/conf/ > /dev/null
    ssh $eachip "mkdir -p /var/www/webapps/config/ $appdirectory"
#    scp $workdir/env.ini $eachip:/var/www/webapps/config/ > /dev/null
    rm -rf $workdir
done





